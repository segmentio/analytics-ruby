# This configuration was generated by
# `rubocop --auto-gen-config`
# on 2017-11-22 15:40:32 +0530 using RuboCop version 0.51.0.
# The point is for the user to remove these configuration records
# one by one as the offenses are removed from the code base.
# Note that changes in the inspected code, or installation of new
# versions of RuboCop, may require this file to be generated again.

AllCops:
  # Rubocop doesn't support 1.9, so we'll use the minimum available
  TargetRubyVersion: 2.1

Layout/IndentHash:
  EnforcedStyle: consistent

# Offense count: 1
Lint/RescueException:
  Exclude:
    - 'lib/segment/analytics/request.rb'

# Offense count: 1
# Cop supports --auto-correct.
Lint/UnneededRequireStatement:
  Exclude:
    - 'lib/segment/analytics/client.rb'

# Offense count: 9
Metrics/AbcSize:
  Max: 32

# Offense count: 13
# Configuration parameters: CountComments, ExcludedMethods.
Metrics/BlockLength:
  Max: 255

# Offense count: 3
# Configuration parameters: CountComments.
Metrics/ClassLength:
  Max: 257

# Offense count: 1
Metrics/CyclomaticComplexity:
  Max: 8

# Offense count: 71
# Configuration parameters: AllowHeredoc, AllowURI, URISchemes, IgnoreCopDirectives, IgnoredPatterns.
# URISchemes: http, https
Metrics/LineLength:
  Max: 223

# Offense count: 10
# Configuration parameters: CountComments.
Metrics/MethodLength:
  Max: 29

# Offense count: 1
Metrics/PerceivedComplexity:
  Max: 8

# Offense count: 1
# Configuration parameters: NamePrefix, NamePrefixBlacklist, NameWhitelist, MethodDefinitionMacros.
# NamePrefix: is_, has_, have_
# NamePrefixBlacklist: is_, has_, have_
# NameWhitelist: is_a?
# MethodDefinitionMacros: define_method, define_singleton_method
Naming/PredicateName:
  Exclude:
    - 'spec/**/*'
    - 'lib/segment/analytics/worker.rb'

# Offense count: 1
Style/AsciiComments:
  Exclude:
    - 'spec/segment/analytics/worker_spec.rb'

# Offense count: 3
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles, ProceduralMethods, FunctionalMethods, IgnoredMethods.
# SupportedStyles: line_count_based, semantic, braces_for_chaining
# ProceduralMethods: benchmark, bm, bmbm, create, each_with_object, measure, new, realtime, tap, with_object
# FunctionalMethods: let, let!, subject, watch
# IgnoredMethods: lambda, proc, it
Style/BlockDelimiters:
  Exclude:
    - 'lib/segment/analytics/utils.rb'
    - 'spec/segment/analytics/client_spec.rb'

# Offense count: 14
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: braces, no_braces, context_dependent
Style/BracesAroundHashParameters:
  Exclude:
    - 'lib/segment/analytics/client.rb'
    - 'spec/segment/analytics/client_spec.rb'
    - 'spec/spec_helper.rb'

# Offense count: 1
# Cop supports --auto-correct.
Style/ColonMethodCall:
  Exclude:
    - 'spec/segment/analytics/worker_spec.rb'

# Offense count: 3
Style/DateTime:
  Exclude:
    - 'spec/segment/analytics/client_spec.rb'

# Offense count: 7
Style/Documentation:
  Exclude:
    - 'spec/**/*'
    - 'test/**/*'
    - 'lib/segment/analytics.rb'
    - 'lib/segment/analytics/client.rb'
    - 'lib/segment/analytics/logging.rb'
    - 'lib/segment/analytics/request.rb'
    - 'lib/segment/analytics/response.rb'
    - 'lib/segment/analytics/utils.rb'
    - 'lib/segment/analytics/worker.rb'

# Offense count: 3
# Cop supports --auto-correct.
Style/EachWithObject:
  Exclude:
    - 'lib/segment/analytics/utils.rb'

Style/FormatString:
  EnforcedStyle: percent

# Allow one-liner functions to be wrapped in conditionals rather
# than forcing a guard clause
Style/GuardClause:
  MinBodyLength: 2

Style/HashSyntax:
  EnforcedStyle: hash_rockets
  Exclude:
    - 'spec/**/*.rb'

# Offense count: 1
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: module_function, extend_self
Style/ModuleFunction:
  Exclude:
    - 'lib/segment/analytics/utils.rb'

Style/MutableConstant:
  Enabled: false

Style/NumericLiterals:
  MinDigits: 6

Style/ParallelAssignment:
  Enabled: false

Style/PreferredHashMethods:
  EnforcedStyle: verbose

